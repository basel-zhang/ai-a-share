# -*- coding: utf-8 -*-

import json

from langchain_core.messages import HumanMessage

from agents.a_share_data import a_share_data_agent
from agents.fundamentals import fundamentals_agent
from agents.risk_manager import risk_management_agent
from agents.sentiment import sentiment_agent
from agents.technicals import technical_analyst_agent
from agents.valuation import valuation_agent
from graph.state import AgentState, show_agent_reasoning
from utils.my_logging import get_logger
from utils.openrouter_config import get_chat_completion

_log = get_logger(__name__)


##### Portfolio Management Agent #####
def portfolio_management_agent(state: AgentState):
    """Makes final trading decisions and generates orders"""
    show_reasoning = state["metadata"]["show_reasoning"]
    data = state["data"]
    portfolio = data["portfolio"]
    tickers = data["tickers"]

    result = {}
    for ticker in tickers:

        # Get the technical analyst, fundamentals agent, and risk management agent messages
        technical_message = next(msg for msg in state["messages"] if msg.name == technical_analyst_agent.__name__)
        fundamentals_message = next(msg for msg in state["messages"] if msg.name == fundamentals_agent.__name__)
        sentiment_message = next(msg for msg in state["messages"] if msg.name == sentiment_agent.__name__)
        valuation_message = next(msg for msg in state["messages"] if msg.name == valuation_agent.__name__)
        risk_message = next(msg for msg in state["messages"] if msg.name == risk_management_agent.__name__)

        # Create the system message
        system_message = {
            "role": "system",
            "content": """You are a portfolio manager making final trading decisions.
                Your job is to make a trading decision based on the team's analysis while strictly adhering
                to risk management constraints.

                RISK MANAGEMENT CONSTRAINTS:
                - You MUST NOT exceed the max_position_size specified by the risk manager
                - You MUST follow the trading_action (buy/sell/hold) recommended by risk management
                - These are hard constraints that cannot be overridden by other signals

                When weighing the different signals for direction and timing:
                1. Valuation Analysis (35% weight)
                - Primary driver of fair value assessment
                - Determines if price offers good entry/exit point

                2. Fundamental Analysis (30% weight)
                - Business quality and growth assessment
                - Determines conviction in long-term potential

                3. Technical Analysis (25% weight)
                - Secondary confirmation
                - Helps with entry/exit timing

                4. Sentiment Analysis (10% weight)
                - Final consideration
                - Can influence sizing within risk limits

                The decision process should be:
                1. First check risk management constraints
                2. Then evaluate valuation signal
                3. Then evaluate fundamentals signal
                4. Use technical analysis for timing
                5. Consider sentiment for final adjustment

                Provide the following in your output:
                - "action": "buy" | "sell" | "hold",
                - "quantity": <positive integer>
                - "confidence": <float between 0 and 100>
                - "agent_signals": <list of agent signals including agent name, signal (bullish | bearish | neutral), and their confidence>
                - "reasoning": <concise explanation of the decision including how you weighted the signals>

                Trading Rules:
                - Never exceed risk management position limits
                - Only buy if you have available cash
                - Only sell if you have shares to sell
                - Quantity must be ≤ current position for sells
                - Quantity must be ≤ max_position_size from risk management""",
        }

        # Create the user message
        user_message = {
            "role": "user",
            "content": f"""Based on the team's analysis below, make your trading decision.

                Technical Analysis Trading Signal: {technical_message.content}
                Fundamental Analysis Trading Signal: {fundamentals_message.content}
                Sentiment Analysis Trading Signal: {sentiment_message.content}
                Valuation Analysis Trading Signal: {valuation_message.content}
                Risk Management Trading Signal: {risk_message.content}

                Here is the current portfolio:
                Portfolio:
                Cash: {portfolio['cash']:.2f}
                Current Position: {portfolio['stock']} shares

                Only include the action, quantity, reasoning, confidence, and agent_signals in your output as JSON.  Do not include any JSON markdown.

                Remember, the action must be either buy, sell, or hold.
                You can only buy if you have available cash.
                You can only sell if you have shares in the portfolio to sell.""",
        }

        # Get the completion from OpenRouter
        result[ticker] = json.loads(get_chat_completion([system_message, user_message]))

    # Create the portfolio management message
    message = HumanMessage(
        content=json.dumps(result),
        name=portfolio_management_agent.__name__,
    )

    # Print the decision if the flag is set
    if show_reasoning:
        show_agent_reasoning(message.content, "Portfolio Management Agent")

    _log.debug(f"message.content: {message.content}")
    _log.debug(f"state['messages'][-1].content: {state['messages'][-1].content}")

    return {
        "messages": state["messages"] + [message],
        "data": state["data"],
    }
